---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-weather-sparkplug-config
data:
  mqtt-servers: dev-hivemq:tcp://hivemq.dev-demo-weather-interface.svc:1883
  kafka-bootstrap-host: demo-weather-kafka-cluster-kafka-bootstrap.dev-demo-weather-interface.svc:9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-weather-sparkplug
  labels:
    app.kubernetes.io/name: demo-weather-sparkplug
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/part-of: demo-weather-interface
    app.openshift.io/runtime: quarkus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: demo-weather-sparkplug
      app.kubernetes.io/version: "1.0"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: demo-weather-sparkplug
        app.kubernetes.io/version: "1.0"
        app.kubernetes.io/part-of: demo-weather-interface
        app.openshift.io/runtime: quarkus
    spec:
      containers:
        - name: demo-weather-sparkplug
          image: image-registry.openshift-image-registry.svc:5000/demo-weather-interface/demo-weather-sparkplug:1.0
          envFrom:
            - configMapRef:
                name: demo-weather-sparkplug-config
                optional: false
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 64Mi
          serviceAccountName: demo-weather-sparkplug
          serviceAccount: demo-weather-sparkplug
          securityContext: {}

